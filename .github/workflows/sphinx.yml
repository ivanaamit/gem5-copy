---
name: documentation

on: [push, pull_request, workflow_dispatch]

permissions:
  contents: write

jobs:
  build-gem5:
    runs-on: ubuntu-latest
    container: ghcr.io/gem5/ubuntu-22.04_all-dependencies:latest
    outputs:
      build-name: my-artifact-gem5-4
    steps:
      - uses: actions/checkout@v4
        with:
          ref: stable  # Checkout the 'stable' branch explicitly
      - id: artifact-name
        run: echo "name=$(date +"%Y-%m-%d_%H.%M.%S")-ALL" >> $GITHUB_OUTPUT
      - name: Build gem5
        run: |
          scons build/ALL/gem5.opt -j $(nproc)
      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact-gem5-4
          path: build/ALL/gem5.opt
          retention-days: 5
      - run: echo "This job's status is ${{ job.status }}."

  build-docs:
    runs-on: ubuntu-latest
    needs: build-gem5
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download
      uses: actions/download-artifact@v3
      with:
        name: my-artifact-gem5-4
        path: build/ALL/
        
    - run: chmod u+x build/ALL/gem5.opt
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
      
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        sudo pip3 install sphinx sphinx-rtd-theme
        # Add other dependencies if required

    - name: Create docs directory
      run: mkdir -p docs && cd docs
      
    - name: Create gem5-sphinx script
      run: |
        echo "#!/usr/bin/env python" > gem5-sphinx
        echo "import sphinx.__main__" >> gem5-sphinx
      
    - name: Create gem5-sphinx-apidoc script
      run: |
        echo "#!/usr/bin/env python" > gem5-sphinx-apidoc
        echo "import re" >> gem5-sphinx-apidoc
        echo "import sys" >> gem5-sphinx-apidoc
        echo "from sphinx.ext.apidoc import main" >> gem5-sphinx-apidoc
        echo "if __name__ == '__m5_main__':" >> gem5-sphinx-apidoc
        echo "    sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])" >> gem5-sphinx-apidoc
        echo "    sys.exit(main())" >> gem5-sphinx-apidoc
      
    - name: Generate API documentation
      run: |
        sudo apt update
        sudo apt --fix-broken install
        sudo apt install -y libunwind-dev libprotobuf-dev libhdf5-serial-dev libgoogle-perftools-dev
        build/ALL/gem5.opt gem5-sphinx-apidoc -o docs src/python/gem5 -F -e
      
    - name: Build the documentation
      run: SPHINXBUILD="../build/ALL/gem5.opt" make -C /docs/gem5-sphinx html
